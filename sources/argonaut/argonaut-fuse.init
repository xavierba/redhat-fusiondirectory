#! /bin/sh
### BEGIN INIT INFO
# Provides:          argonaut-fuse
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start/Stop Argonaut Fuse tftp service
# Description:       Argonaut tftp fuse service.
#                    get dhcp request and look into the ldap server to
#                    construct the pxelinux.cfg corresponding to the
#                    system that need to be installed
### END INIT INFO

# Author: SWAELENS Jonathan <swaelens.jonathan@openmailbox.be>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Argonaut Fuse tftp Service"
NAME=argonaut-fuse
DAEMON=/usr/sbin/$NAME
PIDFILE=/var/run/argonaut/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Define LSB log_* functions.
. /lib/lsb/init-functions

# Source function library.
. /etc/rc.d/init.d/functions

#
# Function that starts the daemon/service
#
do_start()
{
  echo -n $"Starting $NAME: "
  daemon --pidfile $PIDFILE $DAEMON
  echo ''
}

#
# Function that stops the daemon/service
#
do_stop()
{
  echo -n $"Stopping $NAME: "
  killproc -p $PIDFILE
  echo ''
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
  # echo -n $"Reload $NAME: "
  killproc -p $PIDFILE -signal 1
}

case "$1" in
  start)
    status -p $PIDFILE > /dev/null
    if [ "$?" = '3' ] ; then
      do_start
    else
      echo "$NAME is already started"
    fi
  ;;
  stop)
    status -p $PIDFILE > /dev/null
    if [ "$?" = '0' ] ; then
      do_stop
    else
      echo "$NAME is not started"
    fi
  ;;
  restart|force-reload)
    status -p $PIDFILE > /dev/null
    case "$?" in
      0) do_stop && do_start ;;
      3) do_start ;;
    esac
  ;;
  status)
    # Return 0 PID is starting
    # Return 1 PID exist but programme is dead
    # Return 2 dead but subsys locked
    # Return 3 PID doesn't exist
    # Return 4 unknown status
    status -p $PIDFILE | sed -n "s/\((.*)\).\(.*\)/$NAME \2/p"
  ;;
  *)
    echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
    exit 3
  ;;
esac

